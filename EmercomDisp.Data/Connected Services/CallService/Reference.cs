//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmercomDisp.Data.CallService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallDto", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
    [System.SerializableAttribute()]
    public partial class CallDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CallTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentCauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncidentDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CallTime {
            get {
                return this.CallTimeField;
            }
            set {
                if ((this.CallTimeField.Equals(value) != true)) {
                    this.CallTimeField = value;
                    this.RaisePropertyChanged("CallTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentCause {
            get {
                return this.IncidentCauseField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentCauseField, value) != true)) {
                    this.IncidentCauseField = value;
                    this.RaisePropertyChanged("IncidentCause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentDescription {
            get {
                return this.IncidentDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentDescriptionField, value) != true)) {
                    this.IncidentDescriptionField = value;
                    this.RaisePropertyChanged("IncidentDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
    [System.SerializableAttribute()]
    public partial class ConnectionFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SqlFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
    [System.SerializableAttribute()]
    public partial class SqlFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
    [System.SerializableAttribute()]
    public partial class ArgumentFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CallService.ICallService")]
    public interface ICallService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/GetCalls", ReplyAction="http://tempuri.org/ICallService/GetCallsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.ConnectionFault), Action="http://tempuri.org/ICallService/GetCallsConnectionFaultFault", Name="ConnectionFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.SqlFault), Action="http://tempuri.org/ICallService/GetCallsSqlFaultFault", Name="SqlFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        EmercomDisp.Data.CallService.CallDto[] GetCalls();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/GetCalls", ReplyAction="http://tempuri.org/ICallService/GetCallsResponse")]
        System.Threading.Tasks.Task<EmercomDisp.Data.CallService.CallDto[]> GetCallsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/GetCallsByCategory", ReplyAction="http://tempuri.org/ICallService/GetCallsByCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.ConnectionFault), Action="http://tempuri.org/ICallService/GetCallsByCategoryConnectionFaultFault", Name="ConnectionFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.SqlFault), Action="http://tempuri.org/ICallService/GetCallsByCategorySqlFaultFault", Name="SqlFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.ArgumentFault), Action="http://tempuri.org/ICallService/GetCallsByCategoryArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        EmercomDisp.Data.CallService.CallDto[] GetCallsByCategory(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/GetCallsByCategory", ReplyAction="http://tempuri.org/ICallService/GetCallsByCategoryResponse")]
        System.Threading.Tasks.Task<EmercomDisp.Data.CallService.CallDto[]> GetCallsByCategoryAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/GetCallById", ReplyAction="http://tempuri.org/ICallService/GetCallByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.ConnectionFault), Action="http://tempuri.org/ICallService/GetCallByIdConnectionFaultFault", Name="ConnectionFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.SqlFault), Action="http://tempuri.org/ICallService/GetCallByIdSqlFaultFault", Name="SqlFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        EmercomDisp.Data.CallService.CallDto GetCallById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/GetCallById", ReplyAction="http://tempuri.org/ICallService/GetCallByIdResponse")]
        System.Threading.Tasks.Task<EmercomDisp.Data.CallService.CallDto> GetCallByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/GetCategories", ReplyAction="http://tempuri.org/ICallService/GetCategoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.ConnectionFault), Action="http://tempuri.org/ICallService/GetCategoriesConnectionFaultFault", Name="ConnectionFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.SqlFault), Action="http://tempuri.org/ICallService/GetCategoriesSqlFaultFault", Name="SqlFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        string[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/GetCategories", ReplyAction="http://tempuri.org/ICallService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<string[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/CreateCall", ReplyAction="http://tempuri.org/ICallService/CreateCallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.ConnectionFault), Action="http://tempuri.org/ICallService/CreateCallConnectionFaultFault", Name="ConnectionFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.SqlFault), Action="http://tempuri.org/ICallService/CreateCallSqlFaultFault", Name="SqlFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.ArgumentFault), Action="http://tempuri.org/ICallService/CreateCallArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        int CreateCall(EmercomDisp.Data.CallService.CallDto call);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/CreateCall", ReplyAction="http://tempuri.org/ICallService/CreateCallResponse")]
        System.Threading.Tasks.Task<int> CreateCallAsync(EmercomDisp.Data.CallService.CallDto call);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/UpdateCall", ReplyAction="http://tempuri.org/ICallService/UpdateCallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.ConnectionFault), Action="http://tempuri.org/ICallService/UpdateCallConnectionFaultFault", Name="ConnectionFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.SqlFault), Action="http://tempuri.org/ICallService/UpdateCallSqlFaultFault", Name="SqlFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.ArgumentFault), Action="http://tempuri.org/ICallService/UpdateCallArgumentFaultFault", Name="ArgumentFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        void UpdateCall(EmercomDisp.Data.CallService.CallDto call);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/UpdateCall", ReplyAction="http://tempuri.org/ICallService/UpdateCallResponse")]
        System.Threading.Tasks.Task UpdateCallAsync(EmercomDisp.Data.CallService.CallDto call);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/DeleteCall", ReplyAction="http://tempuri.org/ICallService/DeleteCallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.ConnectionFault), Action="http://tempuri.org/ICallService/DeleteCallConnectionFaultFault", Name="ConnectionFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        [System.ServiceModel.FaultContractAttribute(typeof(EmercomDisp.Data.CallService.SqlFault), Action="http://tempuri.org/ICallService/DeleteCallSqlFaultFault", Name="SqlFault", Namespace="http://schemas.datacontract.org/2004/07/EmercomDisp.Service.Dto.Models")]
        void DeleteCall(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICallService/DeleteCall", ReplyAction="http://tempuri.org/ICallService/DeleteCallResponse")]
        System.Threading.Tasks.Task DeleteCallAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICallServiceChannel : EmercomDisp.Data.CallService.ICallService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CallServiceClient : System.ServiceModel.ClientBase<EmercomDisp.Data.CallService.ICallService>, EmercomDisp.Data.CallService.ICallService {
        
        public CallServiceClient() {
        }
        
        public CallServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CallServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CallServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CallServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EmercomDisp.Data.CallService.CallDto[] GetCalls() {
            return base.Channel.GetCalls();
        }
        
        public System.Threading.Tasks.Task<EmercomDisp.Data.CallService.CallDto[]> GetCallsAsync() {
            return base.Channel.GetCallsAsync();
        }
        
        public EmercomDisp.Data.CallService.CallDto[] GetCallsByCategory(string category) {
            return base.Channel.GetCallsByCategory(category);
        }
        
        public System.Threading.Tasks.Task<EmercomDisp.Data.CallService.CallDto[]> GetCallsByCategoryAsync(string category) {
            return base.Channel.GetCallsByCategoryAsync(category);
        }
        
        public EmercomDisp.Data.CallService.CallDto GetCallById(int id) {
            return base.Channel.GetCallById(id);
        }
        
        public System.Threading.Tasks.Task<EmercomDisp.Data.CallService.CallDto> GetCallByIdAsync(int id) {
            return base.Channel.GetCallByIdAsync(id);
        }
        
        public string[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public int CreateCall(EmercomDisp.Data.CallService.CallDto call) {
            return base.Channel.CreateCall(call);
        }
        
        public System.Threading.Tasks.Task<int> CreateCallAsync(EmercomDisp.Data.CallService.CallDto call) {
            return base.Channel.CreateCallAsync(call);
        }
        
        public void UpdateCall(EmercomDisp.Data.CallService.CallDto call) {
            base.Channel.UpdateCall(call);
        }
        
        public System.Threading.Tasks.Task UpdateCallAsync(EmercomDisp.Data.CallService.CallDto call) {
            return base.Channel.UpdateCallAsync(call);
        }
        
        public void DeleteCall(int id) {
            base.Channel.DeleteCall(id);
        }
        
        public System.Threading.Tasks.Task DeleteCallAsync(int id) {
            return base.Channel.DeleteCallAsync(id);
        }
    }
}
